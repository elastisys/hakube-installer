#!/bin/bash

set -e

{% if cluster["hooks"]["preinstall"] %}
{% include "hooks/preinstall/" + cluster["hooks"]["preinstall"] %}
{% endif %}

{% include "fragments/functions.sh.j2" %}

{% include "fragments/sysadm-utils.sh.j2" %}

log INFO "installing docker ..."
{% include "fragments/docker.sh.j2" %}

log INFO "installing kubeadm ..."
{% include "fragments/kubeadm.sh.j2" %}

# install ssh keys
sudo tee $HOME/.ssh/id_rsa.pub > /dev/null <<EOF
{% include cluster["sshKeysDir"] + "/" + worker_name + "_rsa.pub" %}
EOF
sudo tee $HOME/.ssh/id_rsa > /dev/null <<EOF
{% include cluster["sshKeysDir"] + "/" + worker_name + "_rsa" %}
EOF
sudo chmod 600 $HOME/.ssh/id_rsa

#
# Run kubeadm
#
sudo tee ~/kubeadm-config-worker.yaml > /dev/null <<EOF
{% include "fragments/kubeadm-config-worker.yaml.j2" %}
EOF
if curl -f http://localhost:10255/healthz > /dev/null; then
    log INFO "kubelet already running, skipping kubeadm join ..."
else
    log INFO "running kubeadm join ..."
    # will wait (indefinitely) for a master to become available
    sudo kubeadm join --config=kubeadm-config-worker.yaml 2>&1 | tee ~/kubeadm.log
    exitcode="${PIPESTATUS[0]}"
    if [ "${exitcode}" != 0 ]; then
	log ERROR "kubeadm join failed with exitcode ${exitcode} ..."
	exit ${exitcode}
    fi
fi

log INFO "bootscript completed."
